-- Autogenerated by migration tool on 2022-05-22 15:40:11
-- CHANGEME: Verify or edit this file before proceeding

-- Resource: container.clusters
CREATE TABLE IF NOT EXISTS "gcp_container_clusters" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"project_id" text,
	"addons_config_cloud_run_config_disabled" boolean,
	"addons_config_cloud_run_config_load_balancer_type" text,
	"addons_config_config_connector_config_enabled" boolean,
	"addons_config_dns_cache_config_enabled" boolean,
	"addons_config_gce_persistent_disk_csi_driver_config_enabled" boolean,
	"addons_config_horizontal_pod_autoscaling_disabled" boolean,
	"addons_config_http_load_balancing_disabled" boolean,
	"addons_config_kubernetes_dashboard_disabled" boolean,
	"addons_config_network_policy_config_disabled" boolean,
	"authenticator_groups_config_enabled" boolean,
	"authenticator_groups_config_security_group" text,
	"autopilot_enabled" boolean,
	"autoscaling_autoprovisioning_locations" text[],
	"autoscaling_autoprovisioning_node_pool_defaults" jsonb,
	"autoscaling_profile" text,
	"autoscaling_enable_node_autoprovisioning" boolean,
	"binary_authorization_enabled" boolean,
	"cluster_ipv4_cidr" cidr,
	"confidential_nodes_enabled" boolean,
	"create_time" timestamp without time zone,
	"current_master_version" text,
	"current_node_count" bigint,
	"current_node_version" text,
	"database_encryption_key_name" text,
	"database_encryption_state" text,
	"default_max_pods_constraint_max_pods_per_node" bigint,
	"description" text,
	"enable_kubernetes_alpha" boolean,
	"enable_tpu" boolean,
	"endpoint" inet,
	"expire_time" timestamp without time zone,
	"id" text,
	"initial_cluster_version" text,
	"initial_node_count" bigint,
	"instance_group_urls" text[],
	"ip_allocation_policy_cluster_ipv4_cidr" cidr,
	"ip_allocation_policy_cluster_ipv4_cidr_block" cidr,
	"ip_allocation_policy_cluster_secondary_range_name" text,
	"ip_allocation_policy_create_subnetwork" boolean,
	"ip_allocation_policy_node_ipv4_cidr" cidr,
	"ip_allocation_policy_node_ipv4_cidr_block" cidr,
	"ip_allocation_policy_services_ipv4_cidr" cidr,
	"ip_allocation_policy_services_ipv4_cidr_block" cidr,
	"ip_allocation_policy_services_secondary_range_name" text,
	"ip_allocation_policy_subnetwork_name" text,
	"ip_allocation_policy_tpu_ipv4_cidr_block" cidr,
	"ip_allocation_policy_use_ip_aliases" boolean,
	"ip_allocation_policy_use_routes" boolean,
	"label_fingerprint" text,
	"legacy_abac_enabled" boolean,
	"location" text,
	"locations" text[],
	"logging_config_component_config_enable_components" text[],
	"logging_service" text,
	"maintenance_policy_resource_version" text,
	"maintenance_policy_window_daily_maintenance_window_duration" text,
	"maintenance_policy_window_daily_maintenance_window_start_time" timestamp without time zone,
	"maintenance_policy_window_maintenance_exclusions" jsonb,
	"maintenance_policy_window_recurring_window_recurrence" text,
	"maintenance_policy_window_recurring_window_window_end_time" timestamp without time zone,
	"maintenance_policy_window_recurring_window_window_start_time" timestamp without time zone,
	"master_auth_client_certificate" text,
	"master_auth_client_certificate_config_issue_client_certificate" boolean,
	"master_auth_client_key" text,
	"master_auth_cluster_ca_certificate" text,
	"master_auth_password" text,
	"master_auth_username" text,
	"master_authorized_networks_config_enabled" boolean,
	"monitoring_config_component_config_enable_components" text[],
	"monitoring_service" text,
	"name" text,
	"network" text,
	"network_config_datapath_provider" text,
	"network_config_default_snat_status_disabled" boolean,
	"network_config_enable_intra_node_visibility" boolean,
	"network_config_enable_l4ilb_subsetting" boolean,
	"network_config_network" text,
	"network_config_private_ipv6_google_access" text,
	"network_config_subnetwork" text,
	"network_policy_enabled" boolean,
	"network_policy_provider" text,
	"node_config" jsonb,
	"node_ipv4_cidr_size" bigint,
	"notification_config_pubsub_enabled" boolean,
	"notification_config_pubsub_topic" text,
	"private_cluster_config_enable_private_endpoint" boolean,
	"private_cluster_config_enable_private_nodes" boolean,
	"private_cluster_config_master_global_access_config_enabled" boolean,
	"private_cluster_config_master_ipv4_cidr_block" cidr,
	"private_cluster_config_peering_name" text,
	"private_cluster_config_private_endpoint" text,
	"private_cluster_config_public_endpoint" text,
	"release_channel" text,
	"resource_labels" jsonb,
	"resource_usage_export_config" jsonb,
	"self_link" text,
	"services_ipv4_cidr" cidr,
	"shielded_nodes_enabled" boolean,
	"status" text,
	"status_message" text,
	"subnetwork" text,
	"tpu_ipv4_cidr_block" cidr,
	"vertical_pod_autoscaling_enabled" boolean,
	"workload_identity_config_workload_pool" text,
	"zone" text,
	CONSTRAINT gcp_container_clusters_pk PRIMARY KEY(id),
	UNIQUE(cq_id)
);
CREATE TABLE IF NOT EXISTS "gcp_container_cluster_autoscaling_resource_limits" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cluster_cq_id" uuid,
	"maximum" bigint,
	"minimum" bigint,
	"resource_type" text,
	CONSTRAINT gcp_container_cluster_autoscaling_resource_limits_pk PRIMARY KEY(cq_id),
	UNIQUE(cq_id),
	FOREIGN KEY (cluster_cq_id) REFERENCES gcp_container_clusters(cq_id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "gcp_container_cluster_conditions" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cluster_cq_id" uuid,
	"canonical_code" text,
	"code" text,
	"message" text,
	CONSTRAINT gcp_container_cluster_conditions_pk PRIMARY KEY(cq_id),
	UNIQUE(cq_id),
	FOREIGN KEY (cluster_cq_id) REFERENCES gcp_container_clusters(cq_id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "gcp_container_cluster_master_authorized_networks_config_cidr_blocks" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cluster_cq_id" uuid,
	"cidr_block" cidr,
	"display_name" text,
	CONSTRAINT gcp_container_cluster_master_authorized_networks_config_cidr_pk PRIMARY KEY(cq_id),
	UNIQUE(cq_id),
	FOREIGN KEY (cluster_cq_id) REFERENCES gcp_container_clusters(cq_id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "gcp_container_cluster_node_pools" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cluster_cq_id" uuid,
	"autoscaling_autoprovisioned" boolean,
	"autoscaling_enabled" boolean,
	"autoscaling_max_node_count" bigint,
	"autoscaling_min_node_count" bigint,
	"config_accelerators" jsonb,
	"config_boot_disk_kms_key" text,
	"config_disk_size_gb" bigint,
	"config_disk_type" text,
	"config_gvnic_enabled" boolean,
	"config_image_type" text,
	"config_kubelet_config_cpu_cfs_quota" boolean,
	"config_kubelet_config_cpu_cfs_quota_period" text,
	"config_kubelet_config_cpu_manager_policy" text,
	"config_labels" jsonb,
	"config_linux_node_config_sysctls" jsonb,
	"config_local_ssd_count" bigint,
	"config_machine_type" text,
	"config_metadata" jsonb,
	"config_min_cpu_platform" text,
	"config_node_group" text,
	"config_oauth_scopes" text[],
	"config_preemptible" boolean,
	"config_reservation_affinity_consume_reservation_type" text,
	"config_reservation_affinity_key" text,
	"config_reservation_affinity_values" text[],
	"config_sandbox_config_type" text,
	"config_service_account" text,
	"config_shielded_instance_config_enable_integrity_monitoring" boolean,
	"config_shielded_instance_config_enable_secure_boot" boolean,
	"config_tags" text[],
	"config_workload_metadata_config_mode" text,
	"initial_node_count" bigint,
	"instance_group_urls" text[],
	"locations" text[],
	"management_auto_repair" boolean,
	"management_auto_upgrade" boolean,
	"management_upgrade_options_auto_upgrade_start_time" timestamp without time zone,
	"management_upgrade_options_description" text,
	"max_pods_constraint_max_pods_per_node" bigint,
	"name" text,
	"network_config_create_pod_range" boolean,
	"network_config_pod_ipv4_cidr_block" cidr,
	"network_config_pod_range" text,
	"pod_ipv4_cidr_size" bigint,
	"self_link" text,
	"status" text,
	"status_message" text,
	"upgrade_settings_max_surge" bigint,
	"upgrade_settings_max_unavailable" bigint,
	"version" text,
	CONSTRAINT gcp_container_cluster_node_pools_pk PRIMARY KEY(cq_id),
	UNIQUE(cq_id),
	FOREIGN KEY (cluster_cq_id) REFERENCES gcp_container_clusters(cq_id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "gcp_container_cluster_node_pool_conditions" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cluster_node_pool_cq_id" uuid,
	"canonical_code" text,
	"code" text,
	"message" text,
	CONSTRAINT gcp_container_cluster_node_pool_conditions_pk PRIMARY KEY(cq_id),
	UNIQUE(cq_id),
	FOREIGN KEY (cluster_node_pool_cq_id) REFERENCES gcp_container_cluster_node_pools(cq_id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "gcp_container_cluster_node_pool_config_taints" (
	"cq_id" uuid NOT NULL,
	"cq_meta" jsonb,
	"cluster_node_pool_cq_id" uuid,
	"effect" text,
	"key" text,
	"value" text,
	CONSTRAINT gcp_container_cluster_node_pool_config_taints_pk PRIMARY KEY(cq_id),
	UNIQUE(cq_id),
	FOREIGN KEY (cluster_node_pool_cq_id) REFERENCES gcp_container_cluster_node_pools(cq_id) ON DELETE CASCADE
);
